from math import pow,sqrt
import csv

def cosine_sim(vector1,vector2):
    # print(vector1,end="") # delete
    # print(vector1[5]) # delete
    # print(vector2,end="") # delete
    # print(vector2[5]) # delete
    # print("len1: ",len(vector1)) # delete
    # print("len2: ",len(vector1)) # delete

    # dot product
    dot_prod = 0
    for i in range(len(vector1)):
        dot_prod += vector1[i]*vector2[i]
    # vector magnitude
    mag_vector1 = 0
    mag_vector2 = 0
    for i in range(len(vector1)):
        mag_vector1 += pow(vector1[i],2)
    for i in range(len(vector2)):
        mag_vector2 += pow(vector2[i],2)
    mag_total = sqrt(mag_vector1)*sqrt(mag_vector2)
    # result
    
    # print(dot_prod/mag_total) # delete
    return dot_prod/mag_total

# usage:
# vector1 = [25,98,30]
# vector2 = [20,90,10]
# print(cosine_sim(vector1,vector2))

output_tekstur = 'fitur/tekstur.csv'
output_warna = 'fitur/warna.csv'

def find(inputFeature, option):
    print(inputFeature[5]) # delete, bener
    results = {}
    if option == 'texture':
        with open(output_tekstur) as f:
            reader = csv.reader(f)

            for row in reader:
                datasetFeature = [float(x) for x in row[1:]]
                d = cosine_sim(inputFeature, datasetFeature)
                results[row[0]] = d

            f.close()
    elif option == 'color':
        with open(output_warna) as f:
            reader = csv.reader(f)

            for row in reader:
                datasetFeature = [float(x) for x in row[1:]]
                # print(inputFeature,end="") # delete
                # print(inputFeature[5]) # delete
                d = cosine_sim(inputFeature, datasetFeature)
                results[row[0]] = d

            f.close()

    results = sorted([(v, k) for (k, v) in results.items()])
    print(results) # delete

    return results
    # return results[:limit]

# usage ex:
# inputF = [126.14295651908023,0.1672657734818665,9.00105046776379,7.455525318003914,0.013465695481830138,0.9786704881314865]
# option = "texture"
# print("hasil:", find(inputF,option))

# usage ex:
# inputF = [0.0,0.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,328.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,49.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,19.0,0.0,0.0,0.0,0.0,0.0,0.0,1222.0,2051.0,0.0,0.0,0.0,0.0,0.0,0.0,7185.0,30.0,0.0,0.0,0.0,0.0,0.0,0.0,16.0,155.0,0.0,0.0,0.0,0.0,0.0,0.0,296.0,4980.0,0.0,0.0,0.0,0.0,0.0,0.0,47.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,6415.0,1757.0,0.0,0.0,0.0,0.0,0.0,0.0,2895.0,304.0,0.0,0.0,0.0,0.0,0.0,0.0,5.0,68.0,0.0,0.0,0.0,0.0,0.0,0.0,597.0,4284.0,0.0,0.0,0.0,0.0,0.0,0.0,57.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,10.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5116.0,1002.0,0.0,0.0,0.0,0.0,0.0,0.0,4969.0,426.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.0,4713.0,0.0,0.0,0.0,0.0,0.0,0.0,123.0,19.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,45.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,219.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4819.0,900.0,0.0,0.0,0.0,0.0,0.0,0.0,8032.0,192.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,45.0,0.0,0.0,0.0,0.0,0.0,0.0,382.0,1739.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,10.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,421.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1190.0,4614.0,0.0,0.0,0.0,0.0,0.0,0.0,6298.0,2368.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1273.0,0.0,0.0,0.0,0.0,0.0,0.0,204.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,9.0,0.0,0.0,0.0,0.0,0.0,0.0,263.0,487.0,0.0,0.0,0.0,0.0,0.0,0.0,283.0,1140.0,0.0,0.0,0.0,0.0,0.0,0.0,189.0,154.0,0.0,0.0,0.0,0.0,0.0,0.0,284.0,9008.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2793.0,0.0,0.0,0.0,0.0,0.0,0.0,7.0,13.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1746.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,53.0,279.0,0.0,0.0,0.0,0.0,0.0,0.0,88.0,686.0,0.0,0.0,0.0,0.0,0.0,0.0,6.0,22.0,0.0,0.0,0.0,0.0,0.0,0.0,6.0,7961.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2322.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,4957.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,27.0,62.0,0.0,0.0,0.0,0.0,0.0,0.0,3.0,34.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,13.0,0.0,0.0,0.0,0.0,0.0,0.0,1983.0,2657.0,0.0,0.0,0.0,0.0,0.0,0.0,3225.0,338.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,69.0,0.0,0.0,0.0,0.0,0.0,0.0,307.0,7660.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,46.0,254.0,0.0,0.0,0.0,0.0,0.0,0.0,139.0,1425.0,0.0,0.0,0.0,0.0,0.0,0.0,28.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,2433.0,7250.0,0.0,0.0,0.0,0.0,0.0,0.0,327.0,1633.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,37.0,0.0,0.0,0.0,0.0,0.0,0.0,12.0,2799.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,11.0,0.0,0.0,0.0,41.0,79.0,0.0,20.0,0.0,0.0,0.0,0.0,282.0,544.0,2.0,26.0,0.0,0.0,0.0,0.0,356.0,845.0,1.0,1.0,4.0,0.0,0.0,0.0,739.0,90.0,0.0,5.0,0.0,0.0,0.0,0.0,4496.0,7041.0,0.0,0.0,0.0,0.0,0.0,0.0,111.0,1657.0,0.0,0.0,0.0,0.0,0.0,0.0,6.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,6.0,19.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,71.0,0.0,0.0,0.0,484.0,141.0,136.0,74.0,0.0,0.0,0.0,0.0,1234.0,302.0,49.0,45.0,0.0,0.0,0.0,0.0,1193.0,171.0,3.0,4.0,34.0,0.0,0.0,0.0,1604.0,390.0,146.0,61.0,0.0,0.0,0.0,0.0,844.0,3173.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,143.0,0.0,0.0,0.0,0.0,0.0,0.0,636.0,709.0,0.0,0.0,0.0,0.0,0.0,0.0,72.0,4665.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.0,26.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,17.0,0.0,0.0,0.0,0.0,0.0,0.0,301.0,22.0,0.0,0.0,0.0,0.0,0.0,0.0,4127.0,2770.0,0.0,0.0,0.0,0.0,0.0,0.0,3274.0,76.0,0.0,0.0,2.0,0.0,0.0,0.0,1185.0,477.0,2.0,1.0,0.0,0.0,0.0,0.0,794.0,3092.0,0.0,0.0,0.0,0.0,0.0,0.0,210.0,0.0,0.0,0.0,20.0,0.0,0.0,0.0,320.0,270.0,72.0,25.0,0.0,0.0,0.0,0.0,953.0,1611.0,20.0,16.0,0.0,0.0,0.0,0.0,93.0,1754.0,0.0,0.0,0.0,0.0,0.0,0.0,31.0,6.0,0.0,0.0,0.0,0.0,0.0,0.0,2366.0,7894.0,0.0,0.0,0.0,0.0,0.0,0.0,12.0,379.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,542.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.0,0.0,0.0,0.0,56.0,62.0,4.0,3.0,0.0,0.0,0.0,0.0,1270.0,406.0,0.0,0.0,0.0,0.0,0.0,0.0,235.0,109.0,0.0,0.0,0.0,0.0,0.0,0.0,654.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,12255.0,1105.0,0.0,0.0,0.0,0.0,0.0,0.0,50.0,158.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,171.0,15.0,3.0,0.0,0.0,0.0,0.0,0.0,597.0,15.0,1.0,0.0,0.0,0.0,0.0,0.0,113.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,5627.0,28.0,0.0,0.0,0.0,0.0,0.0,0.0,5918.0,137.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3697.0,39.0,0.0,0.0,0.0,0.0,0.0,0.0,6.0,13.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,91.0,11.0,0.0,0.0,0.0,0.0,0.0,0.0,4620.0,1251.0,0.0,0.0,0.0,0.0,0.0,0.0,1501.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3262.0,1073.0,0.0,0.0,0.0,0.0,0.0,0.0,226.0,4349.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]
# option = "color"
# print("hasil:", find(inputF,option))
